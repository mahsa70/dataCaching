{
  "openapi": "3.0.0",
  "info": {
    "title": "Read Data From Cache",
    "description": "this is a sample Nodejs implemented with redis Cache ",
    "termsOfService": "http://example.com/terms",
    "contact": {
      "name": "Theophilus Omoregbee",
      "url": "http://github.com/theo4u",
      "email": "theo4u@ymail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "in": "header",
        "name": "Authorization",
        "description": "Bearer Token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "user": {
        "description": "the user schema",
        "properties": {
          "firstName": {
            "unique": false,
            "required": false
          },
          "lastName": {
            "unique": false,
            "required": false
          },
          "email": {
            "unique": true,
            "required": true
          },
          "access_token": {
            "required": true
          },
          "refresh_token": {
            "required": true
          },
          "username": {
            "unique": true,
            "required": true
          },
          "password": {
            "required": true
          }
        }
      },
      "blog": {
        "description": "the blog schema",
        "properties": {
          "title": {
            "unique": false,
            "required": true
          },
          "isActive": {
            "unique": false,
            "required": true
          },
          "userId": {
            "unique": false,
            "required": true
          },
          "descrption": {
            "required": true
          }
        }
      }
    },
    "parameters": {
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:1337/",
      "description": "local server"
    }
  ],
  "externalDocs": {
    "url": "https://theoomoregbee.github.io/"
  },
  "tags": [
    {
      "name": "Blog",
      "description": "Sails blueprint actions for the **Blog** model"
    },
    {
      "name": "User",
      "description": "Sails blueprint actions for the **User** model"
    },
    {
      "name": "Auth"
    }
  ],
  "paths": {
    "/api/v1/user/all": {
      "get": {
        "summary": "get all users",
        "description": "get all users",
        "tags": [
          "User"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/getByUsername": {
      "get": {
        "summary": "getByUsername",
        "description": "getByUsername",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "username"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/signup": {
      "post": {
        "summary": "signup  a user",
        "description": "signup a user",
        "tags": [
          "User"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "email",
                  "username",
                  "firstName",
                  "lastName",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/user/signin": {
      "post": {
        "summary": "signin the user",
        "description": "signin the user",
        "tags": [
          "User"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refreshToken": {
      "post": {
        "summary": "Authentication",
        "description": "generate a new refresh token",
        "tags": [
          "Auth"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/blog/create": {
      "post": {
        "summary": "create a blog by user",
        "description": "this api is used for creating a blog",
        "tags": [
          "Blog"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/blog"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "unique": false,
                    "required": true
                  },
                  "isActive": {
                    "unique": false,
                    "required": true
                  },
                  "userId": {
                    "unique": false,
                    "required": true
                  },
                  "descrption": {
                    "required": true
                  }
                },
                "required": [
                  "title",
                  "descrption",
                  "isActive",
                  "userId"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/blog/all": {
      "get": {
        "summary": "create a blog by user",
        "description": "this api is used for creating a blog",
        "tags": [
          "Blog"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/blog"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}